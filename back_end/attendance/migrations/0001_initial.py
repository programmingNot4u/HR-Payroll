# Generated by Django 5.1.6 on 2025-10-01 06:33

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0008_employee_generated_email_employee_generated_password'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttendanceSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standard_working_hours', models.DecimalField(decimal_places=2, default=8.0, help_text='Standard working hours per day', max_digits=4)),
                ('lunch_break_duration', models.DecimalField(decimal_places=2, default=1.0, help_text='Lunch break duration in hours', max_digits=4)),
                ('safe_entry_time', models.TimeField(default='08:00', help_text='Safe entry time')),
                ('late_entry_time', models.TimeField(default='08:05', help_text='Late entry time')),
                ('safe_exit_time', models.TimeField(default='17:00', help_text='Safe exit time')),
                ('overtime_start_time', models.TimeField(default='17:00', help_text='Overtime start time')),
                ('extra_overtime_start_time', models.TimeField(default='19:00', help_text='Extra overtime start time')),
                ('snacks_eligibility_hours', models.DecimalField(decimal_places=2, default=1.0, help_text='Extra overtime hours required for snacks eligibility', max_digits=4)),
                ('night_bill_eligibility_hours', models.DecimalField(decimal_places=2, default=5.0, help_text='Extra overtime hours required for night bill eligibility', max_digits=4)),
                ('weekend_days', models.JSONField(default=list, help_text='List of weekend days (0=Sunday, 1=Monday, etc.)')),
                ('auto_calculate_overtime', models.BooleanField(default=True)),
                ('auto_calculate_extra_overtime', models.BooleanField(default=True)),
                ('auto_update_leave_balance', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Attendance Settings',
                'verbose_name_plural': 'Attendance Settings',
                'db_table': 'attendance_settings',
            },
        ),
        migrations.CreateModel(
            name='LeavePolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('casual', 'Casual Leave'), ('sick', 'Sick Leave'), ('annual', 'Annual Leave'), ('maternity', 'Maternity Leave'), ('paternity', 'Paternity Leave'), ('earned', 'Earned Leave'), ('compensatory', 'Compensatory Leave'), ('without_pay', 'Leave Without Pay')], max_length=20, unique=True)),
                ('max_days_per_year', models.PositiveIntegerField(help_text='Maximum days allowed per year')),
                ('max_carry_forward', models.PositiveIntegerField(default=0, help_text='Maximum days that can be carried forward')),
                ('requires_approval', models.BooleanField(default=True)),
                ('requires_medical_certificate', models.BooleanField(default=False)),
                ('gender_restriction', models.CharField(choices=[('all', 'All'), ('male', 'Male'), ('female', 'Female')], default='all', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Leave Policy',
                'verbose_name_plural': 'Leave Policies',
                'db_table': 'attendance_leave_policy',
                'ordering': ['leave_type'],
            },
        ),
        migrations.CreateModel(
            name='AttendanceMachine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_id', models.CharField(help_text='Unique machine identifier', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Machine name/location', max_length=200)),
                ('machine_type', models.CharField(choices=[('simulated', 'Simulated'), ('zkteco', 'ZKTeco'), ('suprema', 'Suprema'), ('hikvision', 'Hikvision'), ('generic', 'Generic')], max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('port', models.PositiveIntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, help_text='Physical location', max_length=200)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Maintenance'), ('error', 'Error')], default='active', max_length=20)),
                ('is_connected', models.BooleanField(default=False)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('config', models.JSONField(blank=True, default=dict, help_text='Machine-specific configuration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, help_text='Department this machine serves', null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.department')),
            ],
            options={
                'verbose_name': 'Attendance Machine',
                'verbose_name_plural': 'Attendance Machines',
                'db_table': 'attendance_machine',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Holiday name', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('holiday_type', models.CharField(choices=[('national', 'National Holiday'), ('religious', 'Religious Holiday'), ('cultural', 'Cultural Holiday'), ('company', 'Company Holiday')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_recurring', models.BooleanField(default=False, help_text='Recurring annually')),
                ('is_observed', models.BooleanField(default=True, help_text='Is this holiday observed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Holiday',
                'verbose_name_plural': 'Holidays',
                'db_table': 'attendance_holiday',
                'ordering': ['start_date'],
                'indexes': [models.Index(fields=['start_date', 'end_date'], name='attendance__start_d_f24352_idx'), models.Index(fields=['holiday_type'], name='attendance__holiday_e0514a_idx')],
            },
        ),
        migrations.CreateModel(
            name='AttendanceScan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scan_time', models.DateTimeField(help_text='Exact time of scan')),
                ('scan_type', models.CharField(choices=[('IN', 'Check In'), ('OUT', 'Check Out'), ('BREAK_IN', 'Break In'), ('BREAK_OUT', 'Break Out'), ('OVERTIME_IN', 'Overtime In'), ('OVERTIME_OUT', 'Overtime Out')], max_length=20)),
                ('raw_data', models.JSONField(blank=True, default=dict, help_text='Raw machine data')),
                ('is_processed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_scans', to='employees.employee')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='attendance.attendancemachine')),
            ],
            options={
                'verbose_name': 'Attendance Scan',
                'verbose_name_plural': 'Attendance Scans',
                'db_table': 'attendance_scan',
                'ordering': ['-scan_time'],
                'indexes': [models.Index(fields=['employee', 'scan_time'], name='attendance__employe_856e0c_idx'), models.Index(fields=['machine', 'scan_time'], name='attendance__machine_f6a4da_idx'), models.Index(fields=['scan_time'], name='attendance__scan_ti_0975e5_idx')],
            },
        ),
        migrations.CreateModel(
            name='DailyAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Attendance date')),
                ('status', models.CharField(choices=[('Present-OnTime', 'Present On Time'), ('Present-Considered', 'Present Considered'), ('Present-Late', 'Present Late'), ('Absent', 'Absent'), ('Leave-Earn', 'Leave Earn'), ('Leave-Casual', 'Leave Casual'), ('Leave-Sick', 'Leave Sick'), ('Leave-Maternity', 'Leave Maternity'), ('Leave-WithOutPay', 'Leave Without Pay'), ('Holiday', 'Holiday'), ('Weekend', 'Weekend')], default='Absent', max_length=20)),
                ('first_check_in', models.TimeField(blank=True, null=True)),
                ('last_check_out', models.TimeField(blank=True, null=True)),
                ('total_working_hours', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(24)])),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(16)])),
                ('extra_overtime_hours', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(16)])),
                ('total_scans', models.PositiveIntegerField(default=0)),
                ('check_in_count', models.PositiveIntegerField(default=0)),
                ('check_out_count', models.PositiveIntegerField(default=0)),
                ('snacks_eligible', models.BooleanField(default=False)),
                ('night_bill_eligible', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('edited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edited_attendance', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_attendance', to='employees.employee')),
            ],
            options={
                'verbose_name': 'Daily Attendance',
                'verbose_name_plural': 'Daily Attendance Records',
                'db_table': 'attendance_daily',
                'ordering': ['-date', 'employee'],
                'indexes': [models.Index(fields=['employee', 'date'], name='attendance__employe_818174_idx'), models.Index(fields=['date', 'status'], name='attendance__date_246c89_idx'), models.Index(fields=['date'], name='attendance__date_05a35b_idx')],
                'unique_together': {('employee', 'date')},
            },
        ),
        migrations.CreateModel(
            name='LeaveBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(help_text='Year for this balance')),
                ('total_days', models.PositiveIntegerField(help_text='Total days allocated for this year')),
                ('used_days', models.PositiveIntegerField(default=0, help_text='Days used this year')),
                ('carried_forward', models.PositiveIntegerField(default=0, help_text='Days carried forward from previous year')),
                ('available_days', models.PositiveIntegerField(help_text='Available days (calculated)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_balances', to='employees.employee')),
                ('leave_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balances', to='attendance.leavepolicy')),
            ],
            options={
                'verbose_name': 'Leave Balance',
                'verbose_name_plural': 'Leave Balances',
                'db_table': 'attendance_leave_balance',
                'ordering': ['employee', 'leave_policy', 'year'],
                'unique_together': {('employee', 'leave_policy', 'year')},
            },
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_days', models.PositiveIntegerField(help_text='Total days requested')),
                ('reason', models.TextField(help_text='Reason for leave')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('medical_certificate', models.FileField(blank=True, null=True, upload_to='leave_documents/')),
                ('other_documents', models.JSONField(blank=True, default=list, help_text='List of additional document URLs')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_leaves', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to='employees.employee')),
                ('leave_policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='attendance.leavepolicy')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_leaves', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Leave Request',
                'verbose_name_plural': 'Leave Requests',
                'db_table': 'attendance_leave_request',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['employee', 'start_date'], name='attendance__employe_bc1c65_idx'), models.Index(fields=['status', 'created_at'], name='attendance__status_0110a0_idx')],
            },
        ),
    ]
